= Deploying

We are running on Heroku.

== To actually do a deploy

=== First check out the proper branch.

To see your local branches:

 git branch

To see all the remote branches:

 git branch -r

==== Staging deployment (no staging server yet, so skip this for now)

To deploy to staging, you'll usually want the latest release branch if any. The following commands should check out the latest branch.

 rel=`git branch | sort -r | perl -ne 'if (m,\s+(release/\S+),) { print "$1"; exit; }'`
 [[ -n "$rel" ]] && git checkout $rel || echo 'Create release branch with:  git flow release finish YYYY-MM-DD-NN'

OR if you already have the release branch locally, just switch to it and update

 git checkout release/RELEASE_NAME
 git pull

OR if you know the release name but don't yet have it checked out and want to track it locally:

 git checkout -t release/RELEASE_NAME

OR if you are making a hotfix, use the hotfix branch you created using the instructions in README_DEVEL.rdoc.

==== Production deployment

To deploy to *production*, you want the master branch:

 git checkout master
 git pull

Until we get a staging server, we are deploying the latest code on the develop branch:

 git merge develop
 git push

=== Tagging

Create a tag for what you are deploying from the 'master' branch.

Use the following convention for naming a tag.

 yyyymmdd_nn

Use the date you created the tag for the 'yyyymmdd' part.  The suffix ('_nn') is a version number for tags that are created on the same day.  Use '_01' for the first tag you create on a day.  If you need to create more than one tag on the same day, increment the suffix.  This convention allows us to easily view tag names sorted by date by sorting them alphanumerically.

Example of two tags created on November 5, 2013:

 20131105_01
 20131105_02

You can view the latest tags with the following command:

 git tag | tail

Create a tag and push it to the remote server.  When prompted for a message, write a summary of changes made between this tag and the previous tag.

 git checkout master
 git tag TAG_NAME
 git push origin TAG_NAME

For example:

 git checkout master
 git tag 20130703_01
 git push origin 20130703_01

If you made a mistake and need to delete a tag:

 git tag   # to list all tags and find the tag you want to delete
 git tag -d TAG_NAME_TO_DELETE
 git push origin :refs/tags/TAG_NAME_TO_DELETE

=== To push to Heroku production

Make sure you have the Heroku command line interface (CLI) installed.  See README_DEVEL_SETUP.rdoc.

Issue these deployment commands:

 git checkout master
 heroku maintenance:on
 git push heroku master
 heroku run rake db:migrate
 heroku ps:restart
 heroku maintenance:off

Check the site.

Also check the logs via papertrail:

  heroku addons:open papertrail

Or install the papertrail plugin and check the logs via the Heroku CLI.  See https://github.com/papertrail/papertrail-heroku-plugin

  heroku pt:logs -t

