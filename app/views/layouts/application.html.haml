!!! XML
!!!
/[if lt IE 7] <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en">
/[if IE 7] <html class="no-js lt-ie9 lt-ie8" lang="en">
/[if IE 8] <html class="no-js lt-ie9" lang="en">
<!--[if gt IE 8]><!-->
%html.no-js{:lang => "en"}
	<!--<![endif]-->
	%head
		%meta{charset: 'utf-8'}
		%meta{content: 'IE=edge,chrome=1', 'http-equiv' => 'X-UA-Compatible'}
		%meta{content: 'width=device-width, initial-scale=1.0', name: 'viewport'}
		%meta{content: (@meta_keywords.presence || t('meta.keywords')), name: 'keywords'}
		%meta{content: (@meta_description.presence || t('meta.description')), name: 'description'}
		= favicon_link_tag '/favicon.ico?v=1'
		%link{href: '/apple-touch-icon.png', rel: 'apple-touch-icon'}
		%title
			- if @page_title_prefix.present?
				= "#{@page_title_prefix} |"
			= "#{company_name} | #{company_tagline}"
		-# Allow option to load CSS before javascript so we do not see a flash of unformatted HTML.
		= yield :head_before_js
		/[if lt IE 9]
			= javascript_include_tag '//html5shim.googlecode.com/svn/trunk/html5.js'
		= javascript_include_tag 'application'
		= javascript_include_tag "https://maps.googleapis.com/maps/api/js?key=#{GOOGLE_BROWSER_API_KEY}&libraries=places&sensor=false".html_safe
		= render partial: 'layouts/tracking'
		-# Name-space my global variables, e.g., my_vars.a_val, my_vars.t.some_text, my_vars.f.a_function
		%script var my_vars={t:{},f:{}};
		= yield :head
		= csrf_meta_tags
	%body{class: @body_class}
		%a{name: 'top'}
		= yield :body_header
		.flash_messages
			- if notice.present?
				.notice= notice
			- if alert.present?
				.alert= alert
		= yield
		%footer#footer
			%nav
				%p#bottom
					= about_link wrapper: {tag: :span}
					= contact_link wrapper: {tag: :span}
					= terms_link wrapper: {tag: :span}
			%p#copyright
				\&copy; Copyright 2013 Kinstantly, Inc. All Rights Reserved.
		-# #line
		:coffeescript
			# Ensure rating stars render properly after everything is loaded.
			window.onload = ->
				my_vars.f.rating_score_reset() if my_vars.f.rating_score_reset
				my_vars.f.rate_reset() if my_vars.f.rate_reset
			#
			# # Add change event to selects, and trigger it on load, so the span is up to date
			# selects = $('.select-wrapper > select').on('change', ->
			# 	# Assign the jquery object to a variable 
			# 	select = $(this)
			# 	# Get placeholder element
			# 	placeholder = select.prev('.select-text')
			# 	# Use the text from the selected option to update the placeholder text
			# 	placeholder.html(select.children('option:selected').text()) if placeholder.length
			# ).change()
			# # Workaround for Firefox which doesn't trigger the change event
			# # if the user is using the keyboard to navigate through the options
			# selects.on('keypress', -> selects.trigger('change'))
			#
			# Autocomplete location field in search form.
			new google.maps.places.Autocomplete(document.getElementById('provider_search_location'), {types: ['geocode']})
			# Google autocomplete is mucking with the placeholder in a way that breaks on IE,
			# specifically when you focus on the input and then immediately unfocus.  This is the fix.
			$('#search_providers').submit ->
				el = $('#provider_search_location')
				el.val '' if el.val() == el.attr('placeholder')
			#
			# Implement text input and textarea placeholders for broken browsers, e.g., IE.
			my_vars.f.text_field_placeholders = (context) -> $('input:text, textarea', context).placeholder()
			my_vars.f.text_field_placeholders document
			$(document).on 'nested:fieldAdded', (e) -> my_vars.f.text_field_placeholders e.field
