- info_email = "#{t('contact.emails.support.value')}@#{t('email_domain')}"
- subscription_preferences = params[:subscription_preferences].present?
#content
	- if subscription_preferences
		.edit_subscriptions.generic_form
			%h3
				Go to your 
				= link_to (t 'views.user.edit.settings_page_link'), edit_user_registration_path, class: 'link'
				to make other changes to your account.
			%br
			%br
			%h1= t 'views.user.edit.subscriptions_form_header'
			%h2= t 'views.user.edit.subscriptions_note'
			= form_for resource, as: resource_name, url: registration_path(resource_name), html: { method: :put } do |f|
				= devise_error_messages!
				= hidden_field_tag :subscription_preferences, subscription_preferences
				= f.check_box :parent_newsletters
				= f.label :parent_newsletters
				%br
				- if resource.is_provider?
					= f.check_box :provider_newsletters
					= f.label :provider_newsletters, checked: true
				%br
				.current_password.text_field
					= f.label :current_password, class: 'required bold'
					= f.password_field :current_password, autocomplete: 'off'
					%span.note= t 'views.user.edit.current_password_note'
				%br
				.buttons
					= f.submit t('views.user.edit.submit'), data: { disable_with: t('views.user.edit.submit_disable') }, class: 'highlight'
	- else
		.edit_account.generic_form
			%h1= t 'views.user.edit.header'
			= form_for resource, as: resource_name, url: registration_path(resource_name), html: { method: :put } do |f|
				= devise_error_messages!
				.email.text_field
					= f.label :email, class: 'required'
					- if resource.unconfirmed_email
						%br
						%span.note.highlight= t 'views.user.edit.unconfirmed_email_note', email: resource.unconfirmed_email
					= f.email_field :email
					%span.note= t 'views.user.edit.email_note'
				.password.text_field
					= f.label :password, t('devise.passwords.edit_password_label')
					= f.password_field :password, autocomplete: 'off'
					%span.note= t 'views.user.edit.password_note', minimum: User::MIN_LENGTHS[:password]
				.password_confirmation.text_field
					= f.label :password_confirmation
					= f.password_field :password_confirmation, autocomplete: 'off'
				.username.text_field
					= f.label :username #, class: 'required'
					= f.text_field :username
				.postal_code.text_field
					= f.label :postal_code
					= f.text_field :postal_code
					%span.note= t 'views.user.edit.postal_code_note'
				- if resource.is_provider?
					.phone.text_field
						= f.label :phone
						= f.text_field :phone
				%br
				.current_password
					.text_field
						= f.label :current_password, class: 'required'
						= f.password_field :current_password, autocomplete: 'off'
						%span.note= t 'views.user.edit.current_password_note'
					%br
					.buttons
						= f.submit t('views.user.edit.submit'), data: { disable_with: t('views.user.edit.submit_disable') }, class: 'highlight'
						-#= link_to t('views.user.edit.cancel'), user_home_page, class: 'cancel_link'		
				%br
				%h1= t 'views.user.edit.subscriptions_header'
				%h3
					Manage your
					= succeed '.' do
						= link_to (t 'views.user.edit.subscriptions_page_link'), edit_subscriptions_path, class: 'link'
				- if resource.is_provider? and resource.profile.try(:show_stripe_connect)
					%br
					%h1#payments_header= t 'views.user.edit.payments_header'
					= render partial: 'devise/shared/payments_setup', locals: {user: resource, return_path: edit_user_registration_path(anchor: 'payments_header')}
				- if resource.is_provider?
					%br
					%h1= t 'views.user.edit.add_button_header'
					#add_button.formlet.info-popover
						%h3
							= t 'views.user.edit.add_button_prompt'
						= link_to 'Add a button', '#', class: 'link'
						.edit.popover
							%h2
								Add a Kinstantly button to...
							%ul
								%li
									showcase positive customer ratings and attract new reviews
								%li
									generate more customer leads
								%li
									make it easy for customers to schedule your services
							%p
								Choose a button below. Then copy the code and paste it into the HTML of your website.
							%textarea.ui-corner-all.ui-widget-content{onclick: "$(this).select()"}
								=raw profile_button_image profile_url(@user.profile), :reviews
							.preview
								%label
									Preview:
								=profile_button_image profile_url(@user.profile), :reviews
							%hr/
							%textarea.ui-corner-all.ui-widget-content{onclick: "$(this).select()"}
								=raw profile_button_image profile_url(@user.profile), :schedule
							.preview
								%label
									Preview:
								=profile_button_image profile_url(@user.profile), :schedule
							%hr/
							%textarea.ui-corner-all.ui-widget-content{onclick: "$(this).select()"}
								=raw profile_button_image profile_url(@user.profile), :like
							.preview
								%label
									Preview:
								=profile_button_image profile_url(@user.profile), :like	
							%p.note 
								Need help? Email us at
								= succeed '.' do
									= mail_to info_email
				- if resource.as_customer
					%br
					%h1= t 'views.user.edit.customer_header'
					%h3
						= t 'views.user.edit.customer_link_before'
						= link_to t('views.user.edit.customer_link'), resource.as_customer
						= t 'views.user.edit.customer_link_after'
				- if resource.two_factor_authentication_allowed?
					%br
					%h1= t 'views.two_factor_authentication.settings'
					#two_factor_authentication.formlet.info-popover
						= render partial: 'devise/two_factor_authentication/account_settings_qrcode'
					#two_factor_authentication_reset.info-popover
						= link_to t('views.two_factor_authentication.qrcode_reset'), '#', class: 'link'
		-#
			.cancel_account.generic_form
				= t('views.user.edit.cancel_account_prompt')
				= link_to t('views.user.edit.cancel_account'), registration_path(resource_name), data: { confirm: t('views.user.edit.cancel_account_confirmation') }, method: :delete

		:javascript
				my_vars.two_factor_authentication_reset_code_path = '#{two_factor_authentication_reset_code_path}';
				my_vars.two_factor_authentication_reset_confirm = '#{t "views.two_factor_authentication.qrcode_reset_confirm"}';

		:coffeescript
			$ ->
				$('.formlet').addClass('open-formlet-popover').on 'click', my_vars.f.open_formlet
				$('.formlet').each -> my_vars.f.configure_formlet this
				
				$('#two_factor_authentication_reset a').on 'click', (e) ->
					my_vars.f.close_formlets e
					if confirm(my_vars.two_factor_authentication_reset_confirm)
						$('#two_factor_authentication').load my_vars.two_factor_authentication_reset_code_path, ->
							my_vars.f.configure_formlet $('#two_factor_authentication').click()
					false
