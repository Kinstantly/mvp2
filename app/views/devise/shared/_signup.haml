- is_provider = params[:is_provider].present? || resource.is_provider?
- claiming_profile = session[:claiming_profile].present?
- whoami = is_provider ? (claiming_profile ? 'claiming_profile' : 'provider') : 'member'
- email_tip = t "views.sign_up.email_tip"
- username_inline_tip = t((@signing_up_from_blog ? 'username_inline_blog_tip' : 'username_inline_tip'), scope: 'views.sign_up')
- username_tip = t((@signing_up_from_blog ? 'username_blog_tip' : 'username_tip'), scope: 'views.sign_up')
- password_tip = t "views.sign_up.password_tip", minimum: User::MIN_LENGTHS[:password]
- registration_special_code_tip = t 'views.sign_up.registration_special_code_tip'
- parent_tag = t "views.sign_up.parent_tag"
- provider_tag = t "views.sign_up.provider_tag"
- parent_provider_tag = t "views.sign_up.parent_provider_tag"
- inline_tip ||= false

%h1= t "views.sign_up.#{whoami}_title" unless embedded_in
= form_for(resource, :as => resource_name, :url => registration_path(resource_name)) do |f|
	= devise_error_messages!
	= hidden_field_tag :is_private_alpha, params[:is_private_alpha]
	= hidden_field_tag :in_blog, params[:in_blog] if  params[:in_blog].present?
	= f.hidden_field :signed_up_from_blog
	= f.hidden_field :signed_up_for_mailing_lists
	
	.email.text_field
		= f.label :email
		%br
		= f.email_field :email
		- unless inline_tip
			%span.help_icon
				.help_popover
					%p.tip.grey_text= email_tip

	- if @signing_up_for_newsletter
		.postal_code.text_field
			= f.label :postal_code
			%br
			= f.text_field :postal_code
			-# %p.v_tip.grey_text= t "views.sign_up.postal_code_inline_tip"
	- else 
		.username.text_field
			= f.label :username
			%br
			= f.text_field :username
			- unless inline_tip
				%span.help_icon
					.help_popover
						%p.tip.grey_text= username_tip
			%p.v_tip.grey_text= username_inline_tip

	.password.text_field
		= f.label :password
		%br
		= f.password_field :password, autocomplete: 'off'
		- if inline_tip
			%p.tip.grey_text= password_tip
		- else
			%span.help_icon
				.help_popover
					%p.tip.grey_text= password_tip

	.password_confirmation.text_field
		= f.label :password_confirmation
		%br
		= f.password_field :password_confirmation, autocomplete: 'off'

	-# - unless @signing_up_for_newsletter
	-# 	.registration_special_code.text_field
	-# 		= f.label :registration_special_code
	-# 		%br
	-# 		= f.text_field :registration_special_code
	-# 		- unless inline_tip
	-# 			%span.help_icon
	-# 				.help_popover
	-# 					%p.tip.grey_text= registration_special_code_tip

	- if claiming_profile
		-# A provider account is required to claim a profile.
		= f.hidden_field :is_provider, :value => '1'
	- elsif @signing_up_for_newsletter
		-# Keep it simple and sign them up as a parent.
		= f.hidden_field :is_provider, value: ''
	- else
		.radio_buttons
			%label
				= f.radio_button :is_provider, ''
				= parent_tag
			%br
			%label
				- if params[:is_provider].present?
					= f.radio_button :is_provider, '1', checked: true
				- else
					= f.radio_button :is_provider, '1'
				= provider_tag
			%br
			%label
				= f.radio_button :is_provider, '2'
				= parent_provider_tag

	- if @signing_up_for_newsletter
		= f.hidden_field :marketing_emails_and_newsletters, value: '1'
	- else
		.checkbox
			= f.check_box :marketing_emails_and_newsletters
			= f.label :marketing_emails_and_newsletters, (t 'views.user.edit.newsletters_and_marketing_emails_label')

	.buttons
		- if @signing_up_for_newsletter
			= f.submit t(:newsletter_sign_up_label, scope: 'views.sign_up'), disable_with: t('views.sign_up.submit_disable'), class: 'default newsletter_sign_up', id: 'sign_up_button'
		- else
			= f.submit t((is_provider ? :provider_label : :label), scope: 'views.sign_up'), disable_with: t('views.sign_up.submit_disable'), class: 'default', id: 'sign_up_button'

:javascript
	$('#user_marketing_emails_and_newsletters').on('click', function() {
		if(!this.checked)
			ga('send', 'event', 'checkbox', 'click', 'false-news-checkbox');
	});
