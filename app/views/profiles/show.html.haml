- @content_class = 'profile_content'
- content_for :head do
	%meta{property: 'og:url', content: profile_url(@profile)}
	- if (og_title = @profile.company_otherwise_display_name).present?
		%meta{property: 'og:title', content: og_title}
	- if @profile.profile_photo_file_name.present?
		%meta{property: 'og:image', content: @profile.profile_photo.url(:original)}
	%meta{property: 'og:type', content: 'business.business'}
	- if (og_description = @profile.headline).present?
		%meta{property: 'og:description', content: og_description}
	%meta{property: 'og:site_name', content: t('company.name')}
	%meta{property: 'og:determiner', content: ''}
	%meta{property: 'og:updated_time', content: display_profile_date(@profile.updated_at)}
- show_and_edit = can?(:manage_my_profile, @profile) || can?(:edit, @profile)
- if show_and_edit
	= javascript_include_tag 'profile_edit'
- else
	= javascript_include_tag 'profile_show'
- if @claim_token
	.provider_buttons
		= link_to t('views.profile.claim_confirm.link_body'), force_claim_user_profile_path(token: @claim_token), id: 'claim_profile_confirm_link'
		= t 'views.profile.claim_confirm.message'
- elsif @show_claiming_token
	.provider_buttons
		= link_to t('views.profile.claim.message'), claim_user_profile_url(token: @show_claiming_token)
- if can?(:manage, Profile)
	.editor_buttons
		= full_profile_link @profile
		= edit_full_profile_link @profile
		- if not @profile.claimed? and can?(:send_invitation, @profile)
			= new_invitation_profile_link @profile
		= admin_profiles_link
		= admin_link
		- if can?(:destroy, @profile)
			= render partial: 'destroy', locals: {profile: @profile}
- if show_and_edit
	= render partial: 'show_and_edit_tabs', locals: {active_tab: :show}
- else
	= render partial: 'show'
