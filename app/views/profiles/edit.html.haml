- @page_title_prefix = @profile.display_name_or_company
- @body_class ||= 'interior edit'
- @using_photo_editor = true
:javascript
	my_vars.edit_profile = my_vars.edit_profile || {};
	my_vars.edit_profile.max_lengths = #{Profile::MAX_LENGTHS.to_json};
	my_vars.edit_profile.text_area_value_length = function(el) { return el.val().replace(/\n/g, '\r\n').length; };
	my_vars.edit_location = my_vars.edit_location || {};
	my_vars.edit_location.max_lengths = #{Location::MAX_LENGTHS.to_json};
- if can?(:manage, Profile)
	.editor_buttons
		- unless @profile.owned_by? current_user
			= profile_link @profile
		= full_profile_link @profile
		= edit_full_profile_link @profile
		- if !@profile.claimed?
			= new_invitation_profile_link @profile
		= admin_profiles_link
		= admin_link
		- if can?(:destroy, @profile)
			= render partial: 'destroy', locals: {profile: @profile}
- cache ['edit_profile', @profile] do
	%article#content
		%header#content-header.clearfix
			-# = image_tag 'profile-photo.jpg', alt: "#{@profile.display_name_or_company}", width: '168', height: '168', border: '0', class: 'profile-photo', itemprop: 'image'
			-#.profile-photo-placeholder
			-#	= t 'views.profile.view.profile_photo_placeholder'
			#profile-photo.photo-wrapper-large.clickable
				= image_tag @profile.profile_photo.url(:large), alt: "#{@profile.display_name_or_company}", itemprop: 'image', onerror: "this.src = '#{image_path(Profile::DEFAULT_PHOTO_PATH)}'"
				#profile_photo.formlet
					= render partial: 'profile_photo'
			.profile{itemscope: "", itemtype: "http://schema.org/Person"}
				#display_name.formlet
					= render partial: 'display_name_formlet'
				#job.formlet
					= render partial: 'job_formlet'
				#locations.formlet
					= render partial: 'locations_formlet'
				#internet.formlet
					= render partial: 'internet_formlet'
			#rate_review
				= render partial: 'profiles/rating_score', locals: {profile: @profile}
				-# .appointment
				-# 	%a{href: "#"}= t 'views.profile.view.make_an_appointment'
		%section#details.clearfix
			.interior
				.summary-text
					#summary.formlet.editable
						= render partial: 'summary_formlet'
					#certifications.formlet.editable
						= render partial: 'certifications_formlet'
					#education.formlet.editable
						= render partial: 'education_formlet'
					#year_started.formlet.editable
						= render partial: 'year_started_formlet'
				%table.info{border: "0", cellpadding: "0", cellspacing: "0"}
					%tr#services_placeholder.formlet
					%tr#ages_stages.formlet
						= render partial: 'ages_stages_formlet'
					%tr#hours.formlet
						= render partial: 'hours_formlet'
					%tr#pricing.formlet
						= render partial: 'pricing_formlet'
					%tr#insurance_accepted.formlet
						= render partial: 'insurance_accepted_formlet'
					%tr#languages.formlet
						= render partial: 'languages_formlet'
					%tr#availability_service_area.formlet
						= render partial: 'availability_service_area_formlet'
	:coffeescript
		# Run after the document is loaded and everything is in place.
		$ ->
			# Place the formlet the specified number of pixels below the top of the viewport (assume absolute positioning).
			my_vars.f.place_formlet = (formlet) ->
				$('.popover', formlet).css('top', $(window).scrollTop() + 20)
			
			# Final touches to a newly created or updated formlet element.
			my_vars.f.configure_formlet = (formlet) ->
				# Add cancel icon to top of formlet.
				$('.edit.popover', formlet).prepend '<div class="cancel close-popover-button"></div>'
				# Cancel buttons should deactivate the formlet.
				$('.cancel', formlet).click (e) ->
					$('.formlet.active').removeClass 'active'
					false
			
			# Clicking within a formlet element will activate it unless we clicked on a 'dont_popover' element.
			$('.formlet').click (e) ->
				unless $(this).hasClass('active') or $(e.target).hasClass('dont_popover')
					$('.formlet.active').removeClass 'active' # Close any active formlet.
					my_vars.f.place_formlet this
					$(this).addClass 'active'
					
			$('.formlet').each -> my_vars.f.configure_formlet this
			
-# Do not cache this.  It must process for each request to catch changes to categories, etc.
%table.hidden.render
	%tr#services.formlet
		= render partial: 'services_formlet'
:coffeescript
	$('.hidden.render #services').replaceAll '#services_placeholder'
