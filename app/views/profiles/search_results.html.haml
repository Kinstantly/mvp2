.search_results
	%h1= search_results_title @search, address: @search_address, service: @search_service
	- if default_search_query(@search_query, @search_service).blank?
		.search_results_prompt= t 'views.search_results.search_query_prompt'
	- if @search_address.blank? and @search.total > 1
		.search_results_prompt= t 'views.search_results.sorted_by_proximity_prompt'
	.search_results_prompt= t 'views.search_results.suggest_provider_prompt_html', link: suggest_provider_link
	.search_results_list#content
		- @search.results.each do |profile|
			- cache ['search_result', profile] do
				- profile_id = "profile_#{profile.id}"
				%article.search_result.clearfix{itemscope: "", itemtype: "http://schema.org/Person", id: "search_result_#{profile.id}"}
					.short-profile{id: profile_id}
						.popover
							-#.profile-photo-placeholder
							.photo-wrapper-medium
								-#= image_tag profile.photo_path, alt: "#{profile.display_name_or_company}", itemprop: 'image', onerror: "this.src = '#{image_path(Profile::DEFAULT_PHOTO_PATH)}'"
								= image_tag profile.profile_photo.url(:medium), alt: "#{profile.display_name_or_company}", itemprop: 'image', onerror: "this.src = '#{image_path(Profile::DEFAULT_PHOTO_PATH)}'", longdesc: profile_path(profile)
							.profile
								%h1{itemprop: "name"}
									= profile.display_name_or_company
									- if profile.headline.present?
										%span.headline= profile.headline
								- location = profile.first_location
								%span
									%span.location{itemprop: "telephone"}= location.try(:display_phone)
									- if profile.email.present?
										%span.location{itemprop: "email"}
											= t 'views.profile.view.email'
											= profile_display_email profile
									- if profile.url.present?
										%span.location{itemprop: "url"}
											= t 'views.profile.view.url'
											= profile_display_website profile
								%span
									%span.location{itemprop: "street-address"}
										= location.try(:display_address)
										- if (location_count = profile.locations.size) > 1
											= t 'views.location.view.more.how_many', count: (location_count - 1)
								- if profile.ages_stages_note.present?
									%span.location.age_ranges
										= t 'views.profile.view.ages_stages'
										= profile_display_truncated profile.ages_stages_note, length: 150
							.specialties= search_result_specialties_truncated profile, length: 700
							.summary
								%span= profile_display_truncated profile.summary, length: 180

					-# = image_tag 'profile-photo-placeholder.jpg', alt: "#{profile.display_name_or_company}", width: '168', height: '168', border: '0', class: 'profile-photo', itemprop: 'image'
					-#.profile-photo-placeholder
					.photo-wrapper-small
						= link_to profile do
							-#= image_tag profile.photo_path, alt: "#{profile.display_name_or_company}", itemprop: 'image', onerror: "this.src = '#{image_path(Profile::DEFAULT_PHOTO_PATH)}'"
							= image_tag profile.profile_photo.url(:medium), alt: "#{profile.display_name_or_company}", itemprop: 'image', onerror: "this.src = '#{image_path(Profile::DEFAULT_PHOTO_PATH)}'", longdesc: profile_path(profile)
					.profile
						%h1.show_profile{itemprop: "name", 'data-profile-id' => profile_id}
							= profile_list_name_or_company_link profile, class: 'open'
							- if profile.headline.present?
								%span.headline= profile.headline
						%span.specialties= search_result_specialties_truncated profile, length: 200
						%span.location{itemprop: "street-address"}= search_result_location profile
						%span.summary
							= profile_display_truncated profile.summary, length: 200, links: true
							= link_to t('views.search_results.more'), profile_path(profile), class: 'open'
					.rating-contact
						= render partial: 'profiles/rating_score', locals: {profile: profile}
						.appointment
							%a{href: "#"} Make an appointment
		- if @search.results.present?
			.search_result= paginate @search.results
	- if @search.total > 1
		.search_results_prompt= t 'views.search_results.suggest_provider_prompt_html', link: suggest_provider_link

:coffeescript
	event_is_over_element = (e, el) ->
		el_coords = el.offset()
		e.pageY > el_coords.top && e.pageY < el_coords.top + el.outerHeight() &&
			e.pageX > el_coords.left && e.pageX < el_coords.left + el.outerWidth()
	# Pop-up short profiles
	my_vars.f.setup_popup_profiles = ->
		$('.show_profile').mouseenter (e) ->
			short_profile = $('#' + $(this).attr('data-profile-id'))
			short_profile.css('top', $(this).height() + 8) # first try placing below the mouse-over area
			# next see if the short profile is entirely within the viewport
			win = $(window)
			viewport_top = win.scrollTop()
			viewport_bottom = viewport_top + win.height()
			popover_height = $('.popover', short_profile).outerHeight() # only the popover DIV has the proper height
			if short_profile.offset().top + popover_height > viewport_bottom # off the bottom of the viewport?
				short_profile.css('top', -(popover_height + 12)) # place above the mouse-over area
				if short_profile.offset().top < viewport_top # are we now off the top of the viewport?
					short_profile.offset({top: viewport_top + 4, left: short_profile.offset().left}) # place below top of viewport
					my_vars.on_popover = event_is_over_element e, $('.popover', short_profile) # pointer might be on the popover!
			short_profile.addClass 'active' # make it appear
			false
		$('.show_profile').mouseleave ->
			$('#' + $(this).attr('data-profile-id')).removeClass 'active' unless my_vars.on_popover
			false
		$('.short-profile').mouseleave ->
			my_vars.on_popover = false
			$(this).removeClass 'active'
			false
	my_vars.f.setup_popup_profiles()
