- @body_class = 'interior search'
- location_remote_only_msg = t "controllers.profiles.location_remote_only"
- locations_array = {}
= javascript_include_tag 'profile_search'
%hr/
%section.search.left
	%header#content-header.header
		%h1= search_results_title @search, address: @search_address, service: @search_service
		- if default_search_query(@search_query, @search_service).blank?
			%h3.search_results_prompt= t 'views.search_results.search_query_prompt'
		- if @search_address.blank? and @search.total > 1
			%h3.search_results_prompt= t 'views.search_results.sorted_by_proximity_prompt'
		%h3.search_results_prompt= t 'views.search_results.suggest_provider_prompt_html', link: suggest_provider_link
	#suggest_provider
		.popover.generic_form
	%article.search-results
		%ol
			- locations_count = 0
			- @search.results.each do |profile|
				- profile_id = profile.id
				- locations_array[profile_id] = {}
				- locations_array[profile_id]['name'] = profile.display_name_or_company
				- locations_array[profile_id]['locations'] = profile.sorted_locations
				- locations_count += profile.sorted_locations.count if profile.first_location.present? && profile.first_location.display_address.present?
				- cache ['search_result', profile] do
					%li.result{id: "result#{profile_id}", "data-profile-id" => profile_id}
						%aside.photo
							= image_tag profile.profile_photo.url(:medium), onclick: "document.location='#{profile_path(profile)}'", alt: "#{profile.display_name_or_company}", onerror: "this.src = '#{image_path(Profile::DEFAULT_PHOTO_PATH)}'"
							.fb-like{"data-action" => "like", "data-href" => "http://kinstantly.com", "data-layout" => "box_count", "data-share" => "false", "data-show-faces" => "false"}
						%header.result-title
							%h2
								= profile_list_name_or_company_link profile
							%aside.more
								= link_to t('views.search_results.more'), profile_path(profile)
							.ratings-section
								= render partial: 'profiles/rating_score', locals: {profile: profile}
						%section.description
							- if (profile.first_name.present? || profile.last_name.present?) && profile.company_name.present?
								%h3=profile.company_name
							- if profile.headline.present?
								%h4= profile.headline
							%p
								- if profile.ages_stages_note.present?
									%span.meta.ages
										%strong Ages:
										= profile_display_truncated profile.ages_stages_note, length: 150
								%span.meta.specialties
									%strong Specialties:
									= search_result_specialties_truncated profile, length: 700
							- if profile.first_location.present? && profile.first_location.display_address.present?
								%p.address
									- location = profile.first_location
									= link_to location.try(:display_address), "javascript:void(0)", class: "location", "data-latitude" => location.latitude, "data-longitude" => location.longitude, target: "_blank"
									- if (location_count = profile.locations.size) > 1
										= link_to t('views.location.view.more.how_many', count: (location_count - 1)), "javascript:void(0)", class: "more", onclick: "my_vars.f.toggle_more_locations(this)"
										%span.other-locations-slider{style: "display:none"}
											- profile.locations.each_with_index do |location, n|
												-if n != 0
													= link_to location.try(:display_address), "javascript:void(0)", class: "location", "data-latitude" => location.latitude, "data-longitude" => location.longitude, target: "_blank"
							- if profile.search_widget_code.present?
								= raw profile.search_widget_code
- if locations_count > 0
	%section.results-map.right
		.map-embed
			.map_positioner
				#map_canvas
				-#%h2.map-title Day Care in Berkeley, CA
.clearfix
.search_footer
	- if @search.results.present?
		.search_result= paginate @search.results
	- if @search.total > 1
		%h3.search_results_prompt= t 'views.search_results.suggest_provider_prompt_html', link: suggest_provider_link
= render partial: 'layouts/g_analytics', locals: {search_result_num: @search.total}

:javascript
	my_vars.locations_json	= '#{escape_javascript locations_array.to_json}';
	my_vars.basic_marker_icon = 'https://maps.google.com/mapfiles/kml/paddle/blu-stars-lv.png';
	my_vars.highlight_marker_icon = 'https://maps.google.com/mapfiles/kml/paddle/red-stars-lv.png';
	my_vars.provider_suggestion_form_url = '#{new_provider_suggestion_path}';
	my_vars.one_column_max_width = 683;

- cache 'search_results_coffeescript' do
	:coffeescript
		# Sniff UserAgent and detect mobile platform if possible
		ua = navigator.userAgent.toLowerCase()
		my_vars.device =
			iphone: ua.match(/(iphone|ipod|ipad)/i)
			blackberry: ua.match(/blackberry/i)
			android: ua.match(/android/i)

		# Provider suggestion pop-over
		# Close
		my_vars.f.close_provider_suggestion_form = (e) ->
			$('#suggest_provider').removeClass('loaded').removeClass('loading')
			$('#provider_suggestion_form').empty()
			$(document).off 'click', my_vars.f.outer_close_provider_suggestion_form
			false # No bubbling up.
		# Close if clicked outside the pop-over
		my_vars.f.outer_close_provider_suggestion_form = (e) ->
			if $(e.target).closest('#suggest_provider').length == 0
				my_vars.f.close_provider_suggestion_form(e)
		# Load and show
		$('.suggest_provider_link').on 'click', (e) ->
			container = $('#suggest_provider').addClass 'loading'
			popover = $('.popover', container)
			place_popover popover, 10
			popover.load my_vars.provider_suggestion_form_url, ->
				container.removeClass 'loading'
				container.addClass 'loaded'
			$(document).on 'click', my_vars.f.outer_close_provider_suggestion_form
			false
		
		# Locations Slider
		my_vars.f.toggle_more_locations = (el) ->
			$(el).parent().find('.other-locations-slider').slideToggle()
		
		# Google map module
		# Reads JSON string of locations from my_vars.locations_json and
		# Adds markers and popups on map for each valid location  
		my_vars.search_results_map = do ->
			#private
			map_options = 
				zoom: 11
				panControl: false,
				zoomControl: true,
				mapTypeControl: false,
				scaleControl: false,
				streetViewControl: false,
				overviewMapControl: false
				
			info_win_options = 
				maxWidth: 200
				disableAutoPan: false
				
			map_canvas 	  = document.getElementById "map_canvas"	
			map_obj = null
			map_bounds = null
			locations_json = $.parseJSON my_vars.locations_json
			locations_links = $('p.address')
			markers = {}
			popups  = {}
			
			#binds ui elements to user events
			bind_actions = ()  ->
				locations_links.on 'mouseover', (e) ->
					if ($(window).width() < my_vars.one_column_max_width)
						return
					profile_id = $(@).parents('li.result').attr('data-profile-id')
					this.style.cursor = 'pointer'
					#$(@).css color: '#000'
					markers_for_profile = markers[profile_id]
					if markers_for_profile? && markers_for_profile.length > 0
						first_marker = markers_for_profile[0]
						if first_marker?
							marker_coords = first_marker.getPosition()
							if map_obj.getBounds().contains(marker_coords) is false
								map_obj.setCenter(marker_coords)
					toggle_markers_for_profile(profile_id)
					
				locations_links.on 'mouseout', (e) ->
					if ($(window).width() < my_vars.one_column_max_width)
						return
					profile_id = $(@).parents('li.result').attr('data-profile-id')
					this.style.cursor = 'default'
					#$(@).css color: '#807f7f'
					toggle_markers_for_profile(profile_id)
					
				for profile_id, markers_for_profile of markers
					for i, marker of markers_for_profile
						if marker?
							google.maps.event.addListener marker, 'mouseover', ->
								profile_id = @.name
								close_all_popups()
								markers_for_profile = markers[profile_id]
								index = index_in_array markers_for_profile, @
								show_marker profile_id, index
								popups[profile_id][index].open(map_obj, @)
								@.setIcon(my_vars.highlight_marker_icon)
						
							google.maps.event.addListener marker, 'mouseout', ->
								@.setIcon(my_vars.basic_marker_icon)
								
			init_map = (map_center_lat, map_center_lng) ->
				if map_canvas? && map_center_lat? && map_center_lng?
					center_coords = new google.maps.LatLng map_center_lat, map_center_lng
					map_options['center'] = center_coords
					map_options['mapTypeId'] = google.maps.MapTypeId.ROADMAP
					map_obj = new google.maps.Map(map_canvas, map_options)
					map_bounds = new google.maps.LatLngBounds()
					
			init_markers = () ->
				for link, i in locations_links
					id = $(link).parents('li.result').attr('data-profile-id')
					
					if not locations_json[id]?
						continue
					
					name = locations_json[id]['name']
					for location, i in locations_json[id]['locations']
						lat = location.latitude
						lng = location.longitude
						marker = add_marker id, lat, lng
						if markers[id]?
							markers[id][i] = marker
						else
							markers[id] = []
							markers[id][i] = marker
							
						popup = create_popup name, location
						if marker?
							marker.setVisible(true)
						if popups[id]?
							popups[id][i] = popup
						else
							popups[id] = []
							popups[id][i] = popup
							
			create_popup = (name, location) ->
				name = escape_html name
				address1 = escape_html location.address1
				address2 = escape_html location.address2
				city = escape_html location.city
				region = escape_html location.region
				postal_code = escape_html location.postal_code
				phone = escape_html location.phone
				
				line1 = trim_string name
				line2 = trim_string (address1 + " " + address2)
				line3 = trim_string (city + " " + region + " " + postal_code)
				line4 = trim_string phone
				
				address = ""
				address += "<p class='map_popup_text map_popup_title'>" + name + "</p>" if line1?
				address += "<p class='map_popup_text'>" + line2 + "</p>" if line2?
				address += "<p class='map_popup_text'>" + line3 + "</p>" if line3?
				address += "<p class='map_popup_text'>" + line4 + "</p>" if line4?
				address = address.replace(/\s+/g, ' ')
				
				if address?
					popup = new google.maps.InfoWindow(info_win_options)
					popup.setContent(address)
				popup ?= null
				
			add_marker = (profile_id, lat, lng) ->
				if not lat? || not lng? 
					return null
				if not map_obj?
					init_map lat, lng
					adding_first_marker = true
				geo_coords = new google.maps.LatLng lat, lng
				marker = new google.maps.Marker
					name: profile_id
					map: map_obj
					visible: false
					animation: null
					position: geo_coords
					icon: my_vars.basic_marker_icon
				map_bounds.extend(geo_coords)
				map_obj.fitBounds(map_bounds) unless adding_first_marker? # Zooms too much if there is only one marker.
				marker
				
			show_marker = (profile_id, index) ->
				if marker_exists(profile_id, index)
					markers[profile_id][index].setVisible(true)
					
			hide_marker = (profile_id, index) ->
				if marker_exists(profile_id, index)
					markers[profile_id][index].setVisible(false)
					
			toggle_markers_for_profile = (profile_id) ->
				close_all_popups()
				for marker in markers[profile_id]
					if not marker? 
						continue
					if marker.getIcon() == my_vars.basic_marker_icon
						marker.setAnimation(google.maps.Animation.BOUNCE)
						do (marker) ->  
							setTimeout (-> marker.setAnimation(null)), 2000
						marker.setIcon(my_vars.highlight_marker_icon)
					else
						marker.setAnimation(null)
						marker.setIcon(my_vars.basic_marker_icon)			
						
			close_all_popups = () ->
				for i, popups_for_profile of popups
					for popup_el in popups_for_profile
						popup_el.close() if popup_el?
						
			marker_exists = (profile_id, index) ->
				markers[profile_id]? && markers[profile_id][index]?
				
			escape_html = (str) ->
				str ?= ""
				str = trim_string str
				div = document.createElement('div')
				div.appendChild(document.createTextNode(str))
				div.innerHTML
				
			init = (callback) ->
				init_markers()
				bind_actions() if map_obj?
				callback()
				
			# public
			init: (callback) ->
				init(callback)

		# when DOM ready
		$ ->
			# Push map below the window top by this num of pixels when scrolling
			map_top_padding = 16
			map_is_fixed = false
			win = $(window)
			viewport_left = win.scrollLeft()
			viewport_width = win.width()

			position_map = (e) ->
				map_width = $('.map_positioner').outerWidth()
				map_height = $('.map_positioner').outerHeight()

				min_top  = $('section.search.left').offset().top - map_top_padding	
				max_bottom = $('section.search.left').outerHeight()
				max_top = max_bottom - map_height
			
				viewport_top = win.scrollTop()
				new_top_offset = viewport_top - min_top
				
				# Place map below search results
				# if (Modernizr.mq('(max-width: 682px)')) # Modernizr here causes errors on IE8 and is a CPU hog.
				if (win.width() < 663)
					$('.map_positioner').css({ 'position': 'static', 'float': 'none' })
				# Map top/bottom boundaries are within allowed min/max
				else if(viewport_top > min_top && (new_top_offset + map_height) < max_bottom)	
					unless map_is_fixed && viewport_left == win.scrollLeft() && viewport_width == win.width()
						map_is_fixed = true
						viewport_left = win.scrollLeft()
						viewport_width = win.width()
						container = $('.map-embed')
						# In fixed mode, we need to position with respect to the left side of the viewport.
						# But the container is floated right, so we measure starting at the right side of the container, i.e., left+width of the container.
						map_left = Math.ceil(container.offset().left + container.outerWidth() - map_width - viewport_left)
						$('.map_positioner').css({ 'position': 'fixed', 'top': map_top_padding+'px', 'left': map_left + 'px' })
				else if map_is_fixed
					map_is_fixed = false
					# In fixed mode we are positioning with 'left', so it's easier to override using 'left' while in relative mode.  Also, use 'left' in the style sheet.
					if((new_top_offset + map_height) >= max_bottom && max_top > 0)
						$('.map_positioner').css({ 'position': 'relative', 'top': max_top+'px', 'left': '0px' })
					else
						$('.map_positioner').css({ 'position': 'relative', 'top': '0px', 'left': '0px' })

				# Link address link to map app if mobile device is detected
				for address in $('a.location')
					escaped_address = escape(address.text)
					address = $(address)
					#title = escape(address.parents('li.result').find('header.result-title h2 a')[0].innerText)
					if (win.width() < my_vars.one_column_max_width)
						address.addClass('linked_address')
						lat = address.attr('data-latitude')
						lng = address.attr('data-longitude')
							
						if lat && lng
							address.attr target: '_blank'
							if(my_vars.device.iphone)
								address.attr href: 'maps:q=' + escaped_address + '@' + lat + ',' + lng
							else if(my_vars.device.android)
								address.attr href: 'geo:' + lat + ',' + lng + '?q=' + escaped_address
							else
								address.attr href: 'http://maps.google.com/maps?q=' + escaped_address + '&ll=' + lat + ',' + lng
					else
						address.attr href: "javascript:void(0)"
						address.attr target: null
								
			win.scroll position_map
			win.resize position_map
