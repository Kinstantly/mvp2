- source_url_prompt = t 'views.profile.edit.profile_photo_source_url_prompt'
- profile_photo_upload_generic_error = t 'controllers.profiles.profile_photo_generic_error'
- profile_photo_source_url_example = t 'views.profile.edit.profile_photo_source_url_example'
- profile_photo_present = if @profile.errorfree.profile_photo.presence then true else false end
- content_for :head do
	= javascript_include_tag "https://dme0ih8comzn4.cloudfront.net/js/feather.js"
.edit.popover.profile-photo-update
	.close-popover-button
	.errorExplanation.aria-hidden
	.step_one
		%label Step 1 of 2
		%p Please drop an image from your computer in the image area below
		.file-drop
			%span{ 'data-placeholder' => 'Drop files here' } Drop files here
			.upload-waiter.aria-hidden
		%p
			Or you can browse for an image file
			%input.standard-attachment{ name: 'standard_attachment', accept: 'image/*', type: :file}
		%p
			Or
			= link_to "import an image from a URL", '#', id: 'import_from_url_link'
			\.
			.text_field.aria-hidden
				%input{type: :text, name: 'source_url', placeholder: source_url_prompt, title: 'import an image from a URL'}
				%span#upload_from_url.upload-button.ui-corner-all
				%p.note= profile_photo_source_url_example

		%p
			Or you can ask for
			= link_to "more detailed help", '#'
			\.
	.step_two.aria-hidden
		%label Step 2 of 2
		%p Photo successfully uploaded and saved
		.upload-result
			= image_tag @profile.profile_photo.url(:original), id: 'upload_result_img', alt: "#{@profile.display_name_or_company}", itemprop: 'image', onerror: "this.src = '#{image_path(Profile::DEFAULT_PHOTO_PATH)}'"
			.upload-waiter.aria-hidden
		%p.like-profile-photo
			Like it?
			= link_to "Click here to continue editing your profile", '#', id: 'like_profile_photo'
		%p.no-like-profile-photo
			Don't like it?
			= link_to "Click here to crop, resize, or edit this photo...", '#', id: 'edit_profile_photo'
		%p
			or
			= link_to "upload a different photo", '#', id: 'show_step_one'
			/.
		%p
			Get
			= link_to "more detailed help", '#'
%span.clickable.attribute_display.inline_block_attr{itemprop: "profilePhoto"}
	%span.blank_attr= if @profile.errorfree.profile_photo.presence then 'Update a photo' else 'Add a photo' end

:javascript
	my_vars.photo_update_profile_path = '#{photo_update_profile_path @profile}';
	my_vars.profile_photo_upload_generic_error =  '#{profile_photo_upload_generic_error}';
	my_vars.profile_photo_present = (('#{profile_photo_present}' === 'true')? true : false);

:coffeescript
	save_image_from_url = (source_url) ->
		$.ajax
			url: my_vars.photo_update_profile_path,
			type: 'POST',
			dataType: 'json',
			timeout: 30000,
			data: source_url,
			beforeSend: ->
				upload_request_start()
			complete: ->
				upload_request_complete()
			error: ->
				show_errors [my_vars.profile_photo_upload_generic_error]
			success: (data, textStatus, jqXHR) ->
				save_error = if data.error == 'true' then true else false
				if save_error
					show_errors data.error_array
				else
					$("img#upload_result_img").attr('src', data.profile_photo_src)
					update_main_view()
					show_step_two()

	img_result_callback = (source_url, result, poll_counter, image_exists) ->
		if(result)
			image_exists = result
			save_image_from_url('source_url=' + source_url)
			aviary_inst.close()
		else
			setTimeout(poll_image(img_result_callback, source_url, poll_counter, image_exists), 1000)

	poll_image = (callback, source_url, poll_counter, image_exists) ->
		if(poll_counter > 10)
			if(poll_counter == 11)
				aviary_inst.close()
				$('step_two .upload-waiter').hide()
				show_errors ["Photo processing took too long. Please retry."]
			return
		poll_counter++

		if(image_exists)
			return

		img = new Image()
		img.onerror = () -> img_result_callback(source_url, false, poll_counter, image_exists)
		img.onload  = () -> img_result_callback(source_url, true, poll_counter, image_exists)
		img.src = source_url
		if(img.complete)
			img.onload.call(img);

	aviary_inst =
		new Aviary.Feather
			apiKey: 'v9iu6cbcuf2crihe',
			apiVersion: 3,
			tools: ['resize', 'crop', 'orientation', 'brightness', 'contrast', 'saturation', 'warmth'],
			onLoad: () ->
				action_link = $('#edit_profile_photo')
				if(action_link)
					action_link.prop('disabled', true);
			onSave: (image_id, source_url) ->
				if(!source_url)
					return
				$('.step_two .upload-waiter').show()
				poll_counter = 0
				image_exists = false
				poll_image(img_result_callback, source_url, poll_counter, image_exists)
			onError: (error_obj) ->
				aviary_inst.close()
				show_errors ["Something went wrong. Please retry."]

	toggle_popover = ->
		popover = $('.edit.popover.profile-photo-update')
		if popover.is(":visible")
			reset_step_one()
		if my_vars.profile_photo_present
			$('.step_one').hide()
			$('.step_two').show()
		popover.toggle()

	reset_step_one = ->
		$('.step_one div.errorExplanation').hide()
		$('.file-drop .upload-waiter').hide()
		$('.step_one .file-drop img').remove()
		$('.step_one .file-drop').css borderColor: 'red'
		$('.step_one input[name="standard_attachment"]').val('')
		$('.step_one input[name="source_url"]').val('')
		$('#import_from_url_link').parent().next('div.text_field').hide()

	show_step_one = ->
		reset_step_one()
		$('.step_two').css("display", "none")
		$('.step_one').css("display", "block")

	show_step_two = ->
		reset_step_one()
		$('.step_one').hide()
		$('.step_two').fadeIn(2000)
		$('.step_two .upload-waiter').hide()

	update_main_view = ->
		updated_src = $("img#upload_result_img").attr('src')
		$('.photo-wrapper-large img').attr('src', updated_src)
		$('#profile_photo .blank_attr').text('Update a photo')

	show_errors = (error_array) ->
		errorDiv = $(".profile-photo-update div.errorExplanation").empty()
		$('.file-drop').css borderColor: 'red'
		errorUl = $("<ul>")
		if error_array.length == 0
			errorUl.append("<li>An unexpected error occurred while uploading your image, please try again later</li>")
		for key, value of error_array
			errorUl.append("<li>").html(value)
		errorDiv.append(errorUl).slideDown()

	upload_request_start = ->
		$('.step_one img[data-id]').remove()
		$('.step_one div.errorExplanation').fadeOut(500)
		$('.step_one #upload_from_url').prop('disabled', true)
		$('.step_one input[name="standard_attachment"]').prop('disabled', true)
		$('.step_one .file-drop .upload-waiter').show()

	upload_request_complete = ->
		$('.file-drop .upload-waiter').hide()
		$('.step_one input[name="standard_attachment"]').prop('disabled', false)
		$('.step_one #upload_from_url').prop('disabled', false)

	$ ->
		if(my_vars.profile_photo_present)
			show_step_two()
		else
			show_step_one()

		$('.step_two #like_profile_photo').on 'click', (e) ->
			e.preventDefault()
			show_step_one()
			update_main_view()
			toggle_popover()

		$('.step_one #import_from_url_link').on 'click', (e) ->
			e.preventDefault()
			source_url_area = $(this).parent().next('div.text_field')
			if source_url_area.is(":visible")
				source_url_area.slideUp()
			else
				source_url_area.slideDown()

		$('.step_two #show_step_one').on 'click', (e) ->
			e.preventDefault()
			show_step_one()

		$('.photo-wrapper-large img, span[itemprop="profilePhoto"]').on 'click', (e) ->
			toggle_popover()

		$('.profile-photo-update .close-popover-button').on 'click', (e) ->
			$('.edit.popover.profile-photo-update').hide()

		# create a new processor with the endpoint to where the assets are uploaded
		jackUp = new JackUp.Processor({path: my_vars.photo_update_profile_path, timeout: 2000})

		$('.step_one .file-drop').jackUpDragAndDrop(jackUp)

		# prevent the browser to redirect to the file when droped anywhere else on the page
		$(document).bind 'drop dragover', (e) ->
			e.preventDefault()

		$('.step_one .standard-attachment').jackUpAjax(jackUp)

		# called if upload is an image; returns an image jQuery object with src attribute assigned
		jackUp.on 'upload:imageRenderReady', (e, options) ->
			if $('.step_one input[name="standard_attachment"]').is(":disabled")
				return false
			upload_request_start()
			options.image.attr("data-id", options.file.__guid__)
			$('.step_one .file-drop').append(options.image).css(border: "1px solid green")

		# when server responds successfully
		jackUp.on "upload:success", (e, options) ->
			upload_request_complete()
			response = JSON.parse(options.responseText)
			save_error = if response.error == 'true' then true else false
			if save_error
				show_errors response.error_array
			else
				$("img#upload_result_img").attr('src', response.profile_photo_src)
				update_main_view()
				show_step_two()

		# when server returns a non-200 response
		jackUp.on "upload:failure", (e, options) ->
			upload_request_complete()
			show_errors ["'\#{options.file.name}' upload failed. Please retry."]

		$('#upload_from_url').on 'click', (e) ->
			if $('.step_one #upload_from_url').is(":disabled")
				return false
			source_url = $('.step_one input[name=source_url]').serialize()
			save_image_from_url(source_url)

		$('#edit_profile_photo').on 'click', (e) ->
			e.preventDefault()
			aviary_inst.launch
				image: "upload_result_img",
				url: $("img#upload_result_img").attr('src')
			return false


