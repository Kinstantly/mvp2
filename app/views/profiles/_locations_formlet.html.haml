- dummy_loc_id = 100 # If there was an error on creation, location ID will be nil.
- locations = @profile.locations.sort_by{|loc| loc.id.presence || (dummy_loc_id += 1)}
- @country ||= (locations.first.try(:country).presence || default_profile_country)
.edit.popover
	= nested_form_for @profile, url: formlet_update_profile_path(@profile), remote: true, html: {id: "edit-#{formlet}"} do |f|
		%h3{class: 'form_section'}= Profile.human_attribute_name :locations
		= f.error_messages
		= hidden_field_tag 'formlet', formlet
		= f.fields_for :locations, locations do |lf|
			.text_field
				= lf.label :address1
				- address1_prompt = t 'views.location.edit.address1_prompt'
				= lf.text_field :address1, placeholder: address1_prompt, title: address1_prompt
				- address2_prompt = t 'views.location.edit.address2_prompt'
				= lf.text_field :address2, placeholder: address2_prompt, title: address2_prompt
				%p.note= t 'views.location.edit.address2_example'
			.text_field
				= lf.label :city
				= autocomplete_form_field :city, nil, autocomplete_location_city_profiles_path, form_builder: lf
				= lf.label :region
				= lf.subregion_select :region, @country, include_blank: '--'
			.text_field
				= lf.label :postal_code
				= lf.text_field :postal_code
				= lf.hidden_field :country, value: @country
			.text_field
				= lf.label :phone
				= lf.text_field :phone
				%p.note= t 'views.location.edit.phone_example'
			- if current_user.profile_editor?
				.text_field
					= lf.label :search_area_tag_id
					= lf.collection_select :search_area_tag_id, SearchAreaTag.all, :id, :name, {include_blank: t('views.profile.edit.search_area_tag_other')}
			= lf.link_to_remove t('views.location.edit.remove'), confirm: t('views.location.edit.remove_confirm')
		= f.link_to_add t('views.location.edit.add'), :locations, class: 'form_section'
		#locations_buttons
			= f.submit 'Save', disable_with: 'Saving...', class: 'save'
			= link_to 'Cancel', '#', class: 'cancel button'
-# Display the locations (if any) of the STORED profile.
- (locations = @profile.errorfree.locations.order_by_id).each_index do |i|
	- if i == 0
		%span.location.editable.attribute_display{itemprop: "street-address"}
			= locations[i].try(:display_address).presence || profile_blank_attribute_message(Location.human_attribute_name :display_address)
		- if locations.size > 1
			%span
				= link_to t('views.profile.view.more_locations'), '#', id: 'more_locations'
				= link_to t('views.profile.view.hide_locations'), '#', id: 'hide_locations'
		%span.location.editable.attribute_display{itemprop: "telephone"}
			= locations[i].try(:display_phone).presence || profile_blank_attribute_message(Location.human_attribute_name :display_phone)
	- else
		%span.location.more.editable.attribute_display{itemprop: "street-address"}
			= locations[i].try(:display_address).presence || profile_blank_attribute_message(Location.human_attribute_name :display_address)
		%span.location.more.editable.attribute_display{itemprop: "telephone"}
			= locations[i].try(:display_phone).presence || profile_blank_attribute_message(Location.human_attribute_name :display_phone)

:coffeescript
	# In case we are re-rendering on an error, make sure locations marked for destruction are not visible.
	$('.fields.marked_for_destruction').css('display', 'none')
	
	$('#more_locations').click () ->
		$(this).css 'display', 'none'
		$('#hide_locations').css 'display', 'inline'
		$('span.location.more').css 'display', 'block'
		false
	
	$('#hide_locations').click () ->
		$(this).css 'display', 'none'
		$('#more_locations').css 'display', 'inline'
		$('span.location.more').css 'display', 'none'
		false
