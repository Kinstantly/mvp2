- location_remote_only_msg = t "controllers.profiles.location_remote_only"

#map_canvas

:javascript
	my_vars.locations_json	= '#{escape_javascript @profile.locations.order_by_id.to_json}';
	my_vars.locations_total	=  parseInt('#{@profile.locations.count}');
	my_vars.location_remote_only = ('#{@profile.consult_remotely}' == 'true')? true: false;
	my_vars.location_remote_only_msg = '#{location_remote_only_msg}';
	my_vars.basic_marker_icon = 'http://maps.google.com/mapfiles/kml/paddle/blu-stars-lv.png';
	my_vars.highlight_marker_icon = 'http://maps.google.com/mapfiles/kml/paddle/red-stars-lv.png';

:coffeescript
	$ ->
		#google map module
		locations_google_map_module = do ->
			#private
			map_options = 
				zoom: 11
				mapTypeId: google.maps.MapTypeId.ROADMAP
				panControl: false,
				zoomControl: true,
				mapTypeControl: false,
				scaleControl: false,
				streetViewControl: false,
				overviewMapControl: false
			
			map_canvas 	  = document.getElementById "map_canvas"	
			map_obj = null
			locations_json = $.parseJSON my_vars.locations_json
			locations_links = $('.profile .location_block')
			control_links = $('.profile .location_block a')
			markers = []
			popups  = []
		
			#binds ui elements to user events
			bind_actions = ()  ->			
				locations_links.on 'mouseover', (e) ->
					index = @.getAttribute('data-i')
					this.style.cursor = 'pointer'
					$(this).children().css color: '#000'
					marker = markers[index]
					if marker?
						marker_coords = marker.getPosition()
						if map_obj.getBounds().contains(marker_coords) is false
							map_obj.setCenter(marker_coords)
					toggle_highlight_marker(index)

				locations_links.on 'mouseout', (e) ->
					index = @.getAttribute('data-i')
					this.style.cursor = 'default'
					$(this).children().css color: '#807f7f'
					toggle_highlight_marker(index)

				#remove mouse events from show/hide more locations 
				control_links.on 'mouseover', (e) ->
					e.stopPropagation()
					false

				#remove mouse events from show/hide more locations 
				control_links.on 'mouseout', (e) ->
					e.stopPropagation()
					false

				for marker in markers
					if marker?
						google.maps.event.addListener marker, 'mouseover', ->
							for popup_el in popups
								popup_el.close() if popup_el
							index = markers.indexOf(@)
							show_marker index
							popups[index].open(map_obj, @)
							@.setIcon(my_vars.highlight_marker_icon)
						
						google.maps.event.addListener marker, 'mouseout', ->
							#popup.close();
							index = markers.indexOf(@)
							@.setIcon(my_vars.basic_marker_icon)
			
			init_map = (map_center_lat, map_center_lng) ->
				if map_canvas && map_center_lat && map_center_lng
					center_coords = new google.maps.LatLng map_center_lat, map_center_lng
					map_options['center'] = center_coords
					map_obj = new google.maps.Map(map_canvas, map_options)

			init_markers = () ->
				for link, i in locations_links
					location = locations_json[i]
					lat = location.latitude
					lng = location.longitude
					marker = add_marker lat, lng
					markers[i] = marker

					popup = null
					if marker
						popup = new google.maps.InfoWindow
						address1 = escape_html (location.address1 ? "")
						address2 = escape_html (location.address2 ? "")
						city = escape_html (location.city ? "")
						region = escape_html (location.region ? "")
						postal_code = escape_html (location.postal_code ? "")
						phone = escape_html (location.phone ? "")
						address = "<p class='map_popup_text'>" + 
									address1 + " " + address2 + "</p>"
						address += "<p class='map_popup_text'>" + city + " " + region + 
								" " + postal_code + "</p>"
						address += "<p class='map_popup_text'>" + phone + "</p>"
						popup.setContent(address);
				
					popups[i] = popup
					show_marker i

			add_marker = (lat, lng) ->
				if map_obj == null
					init_map lat, lng
				
				geo_coords = new google.maps.LatLng lat, lng
				
				if lat && lng
					marker = new google.maps.Marker
						map: map_obj
						visible: false
						animation: null
						position: geo_coords
						icon: my_vars.basic_marker_icon
				else
					null
			
			show_marker = (index) ->
				if valid_marker_index(index) && marker_exists(index)
					markers[index].setVisible(true);

			hide_marker = (index) ->
				if valid_marker_index(index) && marker_exists(index)
					markers[index].setVisible(false);

			toggle_highlight_marker = (index) ->
				if valid_marker_index(index) && marker_exists(index)
					marker = markers[index]
					popup = popups[index]
					for popup_el in popups
						popup_el.close() if popup_el
					if marker.getIcon() == my_vars.basic_marker_icon
						marker.setAnimation(google.maps.Animation.BOUNCE)
						setTimeout (-> marker.setAnimation(null)), 1000
						marker.setIcon(my_vars.highlight_marker_icon)
						
					else
						marker.setAnimation(null)
						marker.setIcon(my_vars.basic_marker_icon)			

			valid_marker_index = (index) ->
				markers.length > index >= 0

			marker_exists = (index) ->
				markers[index]?
			
			escape_html = (str) ->
				div = document.createElement('div');
				div.appendChild(document.createTextNode(str));
				div.innerHTML;
			
			init = () ->
				init_markers()
				if map_obj is null && my_vars.location_remote_only
					$(map_canvas).append "<p class='ui-corner-all ui-state-default'>" + my_vars.location_remote_only_msg + "</p>"
				else
					bind_actions()

			# public
			init: init

		locations_google_map_module.init()
