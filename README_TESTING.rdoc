= Testing

The goal is to do behavior-driven and test-driven development (BDD and TDD).  I don't always succeed.  Sometimes I write the tests afterwards.  The main thing is to get coverage for all types of functionality.  We're using Rspec and Cucumber.  See 'spec' and 'features' in the repository root.

== Rspec

* https://www.relishapp.com/rspec
* http://pragprog.com/book/achbd/the-rspec-book

Everything is in the 'spec' folder.

== FactoryGirl

* https://github.com/thoughtbot/factory_girl/blob/master/GETTING_STARTED.md

Factories are in 'spec/factories'.  There should be a file in there for each model.  If you create a new model, create a factory for it in that folder.

== Cucumber

* http://cukes.info/

Cucumber feature files are in the 'features' folder.  It shares FactoryGirl with rspec, i.e., in 'spec/factories'.

== Capybara

We are using the Capybara DSL for Cucumber.

* https://gist.github.com/zhengjia/428105 (DSL cheat sheet)
* http://rubydoc.info/github/jnicklas/capybara/master
* https://github.com/jnicklas/capybara#readme

== Database table modifications

If you create, drop, or modify any of the database tables, you'll need to rebuild the test database.  Use this rake task:

 bundle exec rake db:test:prepare

== TextMate

* https://github.com/rspec/rspec-tmbundle (TextMate bundle)

To run Rspec and Cucumber from inside TextMate, go to Preferences -> Advanced -> Shell Variables.  Set the following shell variables.

 RUBYOPT rubygems
 TM_RUBY ~/.rvm/bin/rvm-auto-ruby
 TM_RSPEC_OPTS --drb
 TM_CUCUMBER_OPTS --drb
 CUCUMBER_FORMAT html

For the TM_RUBY value, you might have to use the expanded path instead of '~'.

Note: the \-\-drb option is used to run Rspec and Cucumber via the Spork server (see below).

== Spork

Rspec is configured to use a Spork DRb server when such a server is running for Rspec.  The same goes for Cucumber.  You don't need to run Spork servers, but it speeds things up if you do.  To use Spork, you should run a server for each of Rspec and Cucumber (see below for the start-up commands).

To use Spork with Rspec, you need to specify the '\-\-drb' option.  For example, to run all of the specs use this command:

 bundle exec rspec --drb spec

To use Spork with Cucumber, you need to specify the '\-\-drb' option.  For example, to run all of the features use this command:

 bundle exec cucumber --drb

Here are some useful aliases for starting and monitoring the Rspec and Cucumber Spork servers.  You need to use these aliases from the repository root.

 alias sporkrspecstart='bundle exec spork rspec >> log/sporkrspec.log 2>&1 &'
 alias sporkrspeclog='tail -f log/sporkrspec.log'
 alias sporkcukestart='bundle exec spork cucumber >> log/sporkcuke.log 2>&1 &'
 alias sporkcukelog='tail -f log/sporkcuke.log'

=== Restarting Spork

Some of your source files are preloaded by Spork.  If you modify any of these files and your tests depend on them, you will need to restart Spork to pick up the modifications.  You can kill and start the process, or you can send it a USR2 signal, e.g.,

 # Replace PID with the process ID of the relevant spork process.
 kill -s USR2 PID

It helps to know which files are preloaded.  You can discover that with diagnostic mode.  For more information see https://github.com/sporkrb/spork#diagnostic-mode
